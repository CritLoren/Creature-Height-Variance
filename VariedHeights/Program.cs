// VariedHeights.cs
// A mutagen synthesis patcher that randomizes the height of all human NPCs in a deterministic manner
// The patcher can be configured with a minimum and maximum value for each race and gender of that race

using Mutagen.Bethesda;
using Mutagen.Bethesda.Skyrim;
using Mutagen.Bethesda.Synthesis;

namespace VariedHeights
{
    public class Program
    {
        static Lazy<Settings> _settings = null!;
        static public Settings settings => _settings.Value;
        public static async Task<int> Main(string[] args)
        {

            // Run the patcher
            return await SynthesisPipeline.Instance
                .AddPatch<ISkyrimMod, ISkyrimModGetter>(RunPatch)
                .SetTypicalOpen(GameRelease.SkyrimSE, "VariedHeights.esp")
                .SetAutogeneratedSettings("Settings", "settings.json", out _settings)
                .Run(args);
        }

        // A method to run the patch on a given load order
        private static void RunPatch(IPatcherState<ISkyrimMod, ISkyrimModGetter> state)
        {
            // Loop through all the NPC records in the load order
            foreach (INpcGetter npc in state.LoadOrder.PriorityOrder.Npc().WinningOverrides())
            {
                double min = settings.MinHeightScale;
                double max = settings.MaxHeightScale;

                // Skip the player record if the setting is enabled
                if (settings.IgnorePlayerRecord && npc.FormKey.ID == 0x00000007) continue;

                // Generate a random height for the NPC within the range using a deterministic seed based on their form ID
                var seed = npc.FormKey.ID.GetHashCode();
                var random = new Random(seed);
                var height = min + (max - min) * (float)random.NextDouble();

                // Create a new NPC record with the modified height and add it to the output mod
                var modifiedNpc = state.PatchMod.Npcs.GetOrAddAsOverride(npc);

                Console.WriteLine(String.Format("Changed {0} {1} from the height of {2} to {3}",
                        modifiedNpc.FormKey.ID, modifiedNpc.Name, modifiedNpc.Height, (float)height));

                modifiedNpc.Height = (float)height;
            }
        }
    }
}